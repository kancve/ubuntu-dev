name: Publish docker image

on:
  push:
    branches: [ '*' ]
    # Publish semver tags as releases.
    tags: [ '*' ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    name: Publish docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry (ghcr.io)
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Login against a Docker registry (docker.io)
      - name: Log into docker registry docker.io
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Extract docker.io images label
      - name: Extract docker.io images label
        id: docker
        run: |
          echo "tags=docker.io/${{ env.IMAGE_NAME }}:${{ github.ref_name }}" >> $GITHUB_OUTPUT

      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ steps.docker.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    needs: publish
    steps:
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        id: pull_image
        run: |
          image=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
          gzipname=$(echo ${{ env.IMAGE_NAME }} | sed "s?/?-?g")-${{ github.ref_name }}.tar.gz
          docker pull ${image}
          docker save ${image} | gzip > ${gzipname}
          echo "gzipname=${gzipname}" >> $GITHUB_OUTPUT

      - name: GH Release
        uses: softprops/action-gh-release@v0.1.15
        with:
          files: ${{ steps.pull_image.outputs.gzipname }}
